openapi: 3.0.0
info:
  title: Multiplayer Game Sessions Management API
  description: API documentation for managing multiplayer game sessions
  version: 1.0.0
servers:
  - url: https//localhost:8080
    description: local server
paths:
  /players:
    post:
      summary: Create a new player
      description: Creates a new player with the provided name and email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlayer'
      responses:
        '201':
          description: Player created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sid:
                    type: integer
                    format: uint
                  token:
                    type: string
                    format: UUID
        '400':
          description: Bad Request, insufficient parameters.
    get:
      summary: Get player by
      description: Retrieve players based on specified criteria.
      parameters:
        - name: userName
          in: query
          description: The name of the player
          schema:
            type: string
        - name: token
          in: header
          required: true
          description: The authentication token
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Player retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: Bad Request, invalid parameters provided.
        '404':
          description: Not Found, no players found with the provided criteria.
        '401':
          description: Unauthorized, token invalid.
  /players/:pid:
    get:
      summary: Get player details
      description: Retrieve details of a player by player ID.
      parameters:
        - name: pid
          in: path
          required: true
          description: The unique identifier of the player
          schema:
            type: string
        - name: token
          required: true
          in: header
          description: the authentication token
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Player details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '401':
          description: Unauthorized, token invalid.
        '400':
          description: Bad Request, pid not found.
        '404':
          description: Player not found
  /games:
    post:
      summary: Create a new game
      description: Creates a new game with the provided name, developer, and genres.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGame'
      parameters:
        - name: token
          in: header
          required: true
          description: The authentication token
          schema:
            type: string
            format: UUID
      responses:
        '201':
          description: Game created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Bad Request, insufficient or invalid parameters provided.
    get:
      summary: Get game by developer and genres
      description: Retrieve games based on the provided developer and genres.
      parameters:
        - name: dev
          in: query
          description: The developer of the game
          schema:
            type: string
        - name: genres
          in: query
          description: The genres of the game
          schema:
            type: string
        - name: offset
          in: query
          description: The offset for pagination
          schema:
            type: integer
            format: uint
        - name: limit
          in: query
          description: The limit for pagination
          schema:
            type: integer
            format: uint
        - name: token
          in: header
          required: true
          description: The authentication token
          schema:
            type: string
            format: UUID
      responses:
        '201':
          description: Games retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Bad Request, insufficient or invalid parameters provided.
        '404':
          description: Not Found, no games found with the provided criteria
        '401':
          description: Unauthorized, token invalid.
  /games/:gid:
    get:
      summary: Get game details
      description: Retrieve details of a game by game ID.
      parameters:
        - name: gid
          in: path
          required: true
          description: The unique identifier of the game
          schema:
            type: string
        - name: token
          in: header
          required: true
          description: The authentication token
          schema:
            type: string
            format: UUID
      responses:
        '201':
          description: Game details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Bad Request, invalid game ID provided.
        '404':
          description: Not Found, game with the provided ID not found.
        '401':
            description: Unauthorized, token invalid.
  /sessions:
    post:
      summary: Create a new session
      description: Creates a new session with the provided game ID, date, and capacity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSession'
      parameters:
        - name: token
          in: header
          required: true
          description: The authentication token
          schema:
            type: string
            format: UUID
      responses:
        '201':
          description: Session created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sid:
                    type: integer
                    format: uint
        '401':
          description: Unauthorized, token invalid.
        '400':
          description: Missing or invalid parameters. Please provide 'gid', 'date', and 'capacity' as valid values.
    get:
      summary: Get sessions
      description: Retrieve sessions based on specified criteria.
      parameters:
        - name: gid
          in: query
          description: The game identifier
          schema:
            type: integer
            format: uint
        - name: date
          in: query
          description: The session date
          schema:
            type: string
            format: date
        - name: state
          in: query
          description: The state of the session (open or close)
          schema:
            type: string
            format: SessionState
        - name: playerId
          in: query
          description: The player identifier
          schema:
            type: string
        - name: userName
          in: query
          description: The player username
          schema:
            type: string
        - name: gameName
          in: query
          description: The game name
          schema:
            type: string
        - name: offset
          in: query
          description: The offset for paging
          schema:
            type: integer
            format: uint
        - name: limit
          in: query
          description: The limit for paging
          schema:
            type: integer
            format: uint
        - name: token
          in: query
          required: true
          description: The authentication token
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Sessions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: Bad Request, invalid parameters provided.
        '404':
          description: No sessions found with the specified criteria.
        '401':
            description: Unauthorized, token invalid.
  /sessions/:sid/:pid:
    put:
      summary: Add player to session
      description: Add a player to a session with the provided player and session IDs.
      parameters:
        - name: sid
          in: path
          required: true
          description: The unique identifier of the session
          schema:
            type: integer
            format: uint
        - name: pid
          in: path
          required: true
          description: The unique identifier of the player
          schema:
            type: integer
            format: uint
        - name: token
          in: header
          required: true
          description: The authentication token
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Player added to session successfully
        '400':
          description: Bad Request, insufficient parameters.
        '401':
          description: Unauthorized, authentication token is missing or invalid.
    delete:
        summary: Remove player from session
        description: Removes a player from a session with the provided player and session IDs.
        parameters:
            - name: sid
              in: path
              required: true
              description: The unique identifier of the session
              schema:
                  type: integer
                  format: uint
            - name: pid
              in: path
              required: true
              description: The unique identifier of the player
              schema:
                  type: integer
                  format: uint
            - name: token
              in: header
              required: true
              description: The authentication token
              schema:
                  type: string
                  format: UUID
        responses:
            '200':
              description: Player removed from session successfully
            '400':
              description: Bad Request, insufficient parameters.
            '401':
              description: Unauthorized, authentication token is missing or invalid.
    get:
      summary: Get a player in a session
      description: Retrieve players in a session with the provided session ID.
      parameters:
        - name: sid
          in: path
          required: true
          description: The unique identifier of the session
          schema:
            type: integer
            format: uint
        - name: pid
          in: path
          required: true
          description: The unique identifier of the player
          schema:
            type: integer
            format: uint
        - name: token
          in: header
          required: true
          description: The authentication token
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Players retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/isPlayerInSession'
        '400':
          description: Bad Request, invalid session ID provided.
        '401':
          description: Unauthorized, token invalid.
  /sessions/:sid:
    get:
      summary: Get session details
      description: Retrieve details of a session by session ID.
      parameters:
        - name: sid
          in: path
          required: true
          description: The unique identifier of the session
          schema:
            type: integer
            format: uint
        - name: token
          required: true
          in: header
          description: The authentication token
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Session details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: Bad Request, invalid session ID provided.
        '404':
          description: Session not found with the provided session ID.
        '401':
          description: Unauthorized, token invalid.
    put:
      summary: Update session capacity or date
      description: Updates the capacity or date of a session with the provided session ID, capacity, and date.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionCapacityOrDate'
      parameters:
        - name: token
          required: true
          in: header
          description: The authentication token
          schema:
            type: string
            format: UUID
      responses:
        '200':
          description: Session updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
        '400':
          description: Bad Request, invalid or missing parameters.
        '401':
          description: Unauthorized, authentication token is missing or invalid.
        '304':
          description: Not Modified, error updating session.
    delete:
        summary: Delete session
        description: Deletes a session with the provided session ID.
        parameters:
          - name: sid
            in: path
            required: true
            description: The unique identifier of the session
            schema:
              type: integer
              format: uint
          - name: token
            in: header
            required: true
            description: The authentication token
            schema:
              type: string
              format: UUID
        responses:
          '200':
            description: Session deleted successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Success message
          '400':
            description: Bad Request, invalid or missing parameters.
          '401':
            description: Unauthorized, authentication token is missing or invalid.
          '304':
            description: Not Modified, error deleting session.
  /genres:
    get:
      summary: Get genres
      description: Retrieve all genres.
      responses:
        '200':
          description: Genres retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Not Found, no genres found.
components:
  schemas:
    RemoveSession:
      type: object
      properties:
        sid:
          type: integer
          description: The unique identifier of the session
          format: uint
    RemovePlayerFromSession:
      type: object
      properties:
        pid:
          type: integer
          description: The unique identifier of the player
          format: uint
        sid:
          type: integer
          description: The unique identifier of the session
          format: uint
    UpdateSessionCapacityOrDate:
      type: object
      properties:
        sid:
          type: integer
          description: The unique identifier of the session
          format: uint
        capacity:
          type: integer
          description: The maximum number of players for the session
          format: uint
        date:
          type: string
          format: date
          description: The date and time of the session
    AddPlayerToSession:
      type: object
      properties:
        pid:
          type: integer
          description: The unique identifier of the player
          format: uint
        sid:
          type: integer
          description: The unique identifier of the session
          format: uint
    NewPlayer:
      type: object
      properties:
        name:
          type: string
          description: The player's name
        email:
          type: string
          format: email
          description: The player's email
    Player:
      type: object
      properties:
        playerId:
          type: integer
          description: The unique identifier of the player
          format: uint
        name:
          type: string
          description: The player's name
        username:
          type: string
          description: The player's username
        password:
          type: object
          description: The player's password
        email:
          type: object
          format: email
          description: The player's email
        token:
          type: string
          format: UUID
          description: The player's authentication token
      description: The player
    NewGame:
      type: object
      properties:
        name:
          type: string
          description: The game's name
        developer:
          type: string
          description: The game's developer
        genres:
          type: array
          items:
            type: string
          description: The genres of the game
    Game:
      type: object
      properties:
        gameId:
          type: string
          description: The unique identifier of the game
        name:
          type: string
          description: The game's name
        developer:
          type: string
          description: The game's developer
        genres:
          type: array
          items:
            type: string
          description: The genres of the game
    NewSession:
      type: object
      properties:
        capacity:
          type: integer
          description: The maximum number of players for the session
          format: uint
        gid:
          type: integer
          description: The unique identifier of the game associated with the session
          format: uint
        date:
          type: string
          format: date-time
          description: The date and time of the session
    Session:
      type: object
      properties:
        sid:
          type: integer
          description: The unique identifier of the session
          format: uint
        capacity:
          type: integer
          description: The maximum number of players for the session
          format: uint
        gameInfo:
          type: object
          properties:
            gid:
              type: integer
              description: The unique identifier of the game
              format: uint
            name:
              type: string
              description: The game's name
          description: The game associated with the session
        date:
          type: string
          format: date-time
          description: The date and time of the session
        owner:
          type: object
          properties:
            pid:
              type: integer
              description: The unique identifier of the player
              format: uint
            username:
              type: string
              description: The player's username
          description: The owner of the session
        players:
            type: array
            items:
              type: object
              properties:
                pid:
                  type: integer
                  description: The unique identifier of the player
                  format: uint
                username:
                  type: string
                  description: The player's username
            description: The players in the session
    isPlayerInSession:
      type: object
      properties:
        result:
            type: object
            properties:
              playerId:
                type: integer
                description: The unique identifier of the player
                format: uint
              name:
                type: string
                description: The player's name
              username:
                type: string
                description: The player's username
              password:
                type: object
                description: The player's password
              email:
                type: object
                format: email
                description: The player's email
              token:
                type: string
                format: UUID
                description: The player's authentication token
            description: The player in the session